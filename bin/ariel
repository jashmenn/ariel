#!/usr/bin/env ruby

require 'optparse'
require 'yaml'

require 'breakpoint'
options = {}

OptionParser.new do |opts|
  opts.banner = "Usage: #$0 [mode] [options]"

  opts.on('-m', '--mode=learn|extract') do |mode|
    raise OptionParser::InvalidArgument unless (mode=="extract" or mode=="learn")
    options[:mode]=mode
  end

  opts.on('-d', '--dir=DIRECTORY', 'Directory to look for documents to operate on.') do |dir|
    raise ArgumentError, "directory does not exist" unless FileTest.directory? dir
    options[:dir]=dir
  end

  opts.on('-D', '--debug', 'Enable debugging output.') do 
    $DEBUG=true
  end

  opts.on('-s', '--structure=STRUCTURE', 'YAML file in which the structure is defined') do |structure|
    options[:structure]=structure
  end

  opts.on('-o', '--output-dir=DIRECTORY', 'Directory to output to') do |dir|
    raise ArgumentError, "directory does not exist" unless FileTest.directory? dir
    options[:output_dir]=dir
  end
end.parse!

require 'ariel' #After option parsing so debug setting can take effect

files=Dir["#{options[:dir]}/*"].select {|file_name| File.file? file_name}
structure=YAML.load_file options[:structure]

case options[:mode]
when "learn"
  Ariel.learn(structure, *files)
  File.open(options[:structure], 'wb') do |file|
    YAML.dump(structure, file)
  end

when "extract"
  extractions = Ariel.extract(structure, *files)
  if options[:output_dir]
    extractions.zip(files) do |extraction, file|
      filename=File.join(options[:output_dir], File.basename(file)+'.yaml')
      File.open(filename, 'wb') do |f|
        YAML.dump(extraction, f)
      end
    end
  else
    puts "No --output-dir given, so printing extractions to stdout"
    extractions.each do |extraction| 
      extraction.each_descendant do |node|
        puts "#{node.node_name}: #{node.tokenstream.text}"
      end
      puts #Blank line looks prettier
    end
  end
end
